#!/bin/bash

# This script creates a program.

# Path: EinsteinDB-GPT3/src-EinsteinDBGPT3/einsteindb-gpt3-da-vinci-1/create_program.sh




function red_c()
{
    echo -e $2 "\e[31;1m${1}\e[0m"
}

function cyan_c()
{
    echo -e $2 "\e[36;1m${1}\e[0m"
}

function MakePackage() 
{
    program=$1
    if [ -d $program ] && [ -d $program/bin ] && [ -d $program/etc ] && [ -d $program/tools ]; then
        cyan_c "$program: make package $program.tgz..."
        rm -f $program.tgz
        tar zcvf $program.tgz $program --exclude ''$program'/log/*.log' --exclude ''$program'/log/job/*' --exclude ''$program'/bin/*.runlog' --exclude ''$program'/bin/*.pid'
        if [ $? -ne 0 ];then
            red_c "make package $program failed"
            return 1
        fi
    fi
    return 0
}

if [ $# -lt 1 ];then
    echo "Usage: `basename $0` <all>|<program>...<program>"
    exit 1
fi

if [ $1 == "all" ]; then
    programs=$(ls -d */ | grep -v -E 'base|package')
else
    programs=$@
fi

for program in $programs; do
    MakePackage $program
    if [ $? -ne 0 ]; then
        exit 2
    fi
done

exit 0

# app_name: einsteindb-gpt3-da-vinci-1, program dir: einsteindb-gpt3-da-vinci-1
# mkdir program dir...
# copy code & scripts...
# copy systemd service...
# copy logrotate...
# einsteindb-gpt3-da-vinci-1: make package einsteindb-gpt3-da-vinci-1.tgz...

#
#
#
#
# Compare this snippet from EinsteinDB-GPT3/src-EinsteinDBGPT3/einsteindb-gpt3-da-vinci-1/make_distribution.sh:
# #!/bin/bash
# #
#
#
# #
# # This script creates a program.
# #
#
#
# # Path: EinsteinDB-GPT3/src-EinsteinDBGPT3/einsteindb-gpt3-da-vinci-1/make_distribution.sh
#
#
# function red_c()
# {
#     echo -e $2 "\e[31;1m${1}\e[0m"
# }
#
# function cyan_c()
# {
#     echo -e $2 "\e[36;1m${1}\e[0m"
# }
#
# function MakePackage()
# {
#     program=$1
#     if [ -d $program ] && [ -d $program/bin ] && [ -d $program/etc ] && [ -d $program/tools ]; then
#         cyan_c "$program: make package $program.tgz..."
#         rm -f $program.tgz
#         tar zcvf $program.tgz $program --exclude ''$program'/log/*.log' --exclude ''$program'/log/job/*' --exclude ''$program'/bin/*.runlog' --exclude ''$program'/bin/*.pid'
#         if [ $? -ne 0 ];then
#             red_c "make package $program failed"
#             return 1
#         fi
#     fi
#     return 0
# }

# if [ $# -lt 1 ];then
#     echo "Usage: `basename $0` <all>|<program>...<program>"
#     exit 1
# fi

# if [ $1 == "all" ]; then
#     programs=$(ls -d */ | grep -v -E 'base|package')
# else
#     programs=$@
# fi

# for program in $programs; do
#     MakePackage $program
#     if [ $? -ne 0 ]; then
#         exit 2
#     fi
# done

# exit 0

if [ "$1" == "all" ];then
    echo "Build package all..."
    for file in `ls`
    do
         MakePackage $file
         if [ $? -ne 0 ];then
             red_c "Terminate..."
             exit 1
         fi
    done
else
    echo "Build package $@"
    for file in $@
    do
        MakePackage $file
        if [ $? -ne 0 ];then
            red_c "Terminate..."
            exit 2
        fi
    done
fi
cyan_c "Done!"






